<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>loz4</title><link href="/" rel="alternate"></link><link href="/feeds/blessu.atom.xml" rel="self"></link><id>/</id><updated>2014-08-04T16:31:00+02:00</updated><entry><title>Pelican初体验</title><link href="/pelican.html" rel="alternate"></link><updated>2014-08-04T16:31:00+02:00</updated><author><name>blessu</name></author><id>tag:,2014-08-04:pelican.html</id><summary type="html">&lt;p&gt;先前也转战过WordPress（也注册了域名），是好用，但是个人业余维护起来还是略复杂，不如把时间省出来多看书搬砖陪妹子。&lt;/p&gt;
&lt;p&gt;所以最后回归了简单的Github Pages + Markdown，生成工具出于熟悉Python选择了Pelican而不是常见的Jekyll。&lt;/p&gt;
&lt;p&gt;就set up而言，看着&lt;a href="http://blog.csdn.net/wdzxl198/article/details/17561159"&gt;Pelican + Github 搭建自己的静态博客&lt;/a&gt;来大概不到1个小时；就使用上，对着本地而不是网页码字，简直舒畅。&lt;/p&gt;
&lt;p&gt;熟悉了应该会修改这篇，现在还是笔记和测试，便不那么规整。目前可以提供的参考资料有：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这类博文必须致敬的&lt;a href="http://www.yangzhiping.com/tech/writing-space.html"&gt;理想的写作环境：Git+Github+Markdown+Jekyll&lt;/a&gt;。最早这么做的人一定不是他，但扫了一些经验博文，大多从WordPress转过来的人都看过这篇。可见WordPress从某种程度上的坑，以及心理科班的说服力。&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html"&gt;搭建一个免费的，无限流量的Blog----github Pages和Jekyll入门&lt;/a&gt;，我用的不是Jekyll, 但是这篇太亲和，以致差一点就倒向了Jekyll。&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.skydark.info/programming/2012/03/23/play-with-jekyll/"&gt;Play with Jekyll&lt;/a&gt;, 有许多可借鉴的地方。&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.getpelican.com/en/latest/quickstart.html"&gt;Pelican Quickstart&lt;/a&gt;, 且要翻一阵子这个文档。。。&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.dongxf.com/3_Build_Personal_Blog_With_Pelican_And_GitHub_Pages.html"&gt;用 Pelican 和 GitHub Pages 搭建免费的个人博客&lt;/a&gt;，中文Pelican的一个不错的总结。但是我想说。。。博主你这么快就不更新了是要做反例么！！&lt;/li&gt;
&lt;/ol&gt;</summary><category term="web"></category></entry><entry><title>Hello world of loz4</title><link href="/hello-world.html" rel="alternate"></link><updated>2014-08-04T16:30:00+02:00</updated><author><name>blessu</name></author><id>tag:,2014-08-04:hello-world.html</id><summary type="html">&lt;p&gt;抬头取的是象形，码农和宅男都懂，但愿能坚持维护这个地方。&lt;/p&gt;</summary><category term="pelican"></category></entry><entry><title>简单WordPress建站笔记</title><link href="/wordpress-simple.html" rel="alternate"></link><updated>2014-01-27T17:35:00+01:00</updated><author><name>blessu</name></author><id>tag:,2014-01-27:wordpress-simple.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;按：这是之前挂在WordPress站上的日志。现已加入Github Pages + Pelican。不过还是整理一下，当作纪念吧。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一年来趁着闲的时候偶尔搞了搞网站。但反反复复总会疏漏一些细节。现在小归纳一下，以供参考。&lt;/p&gt;
&lt;h2&gt;域名和主机之获取&lt;/h2&gt;
&lt;p&gt;loz4目前是在&lt;a href="http://namecheap.com"&gt;Namecheap&lt;/a&gt;注册的域名，&lt;a href="http://www.hawkhost.com"&gt;Hawkhost&lt;/a&gt;的一年吊丝主机，用得还算顺畅。&lt;a href="http://namecheap.com"&gt;Namecheap&lt;/a&gt;比较推荐，基本逢节假日会有1刀的优惠，不过需要信用卡或paypal。&lt;a href="http://www.hawkhost.com"&gt;Hawkhost&lt;/a&gt;，根据其logo俗称老鹰主机，基本也算比较适合新手上路的价格。  &lt;/p&gt;
&lt;p&gt;具体的注册购买方法网上已经有很多介绍，之后有时间再写。注意一般先有了域名然后去注册主机，否则之后还需要重新发信更改默认域名（primary domain）。 &lt;/p&gt;
&lt;h2&gt;域名和主机之在一起&lt;/h2&gt;
&lt;p&gt;主要依靠的是DNS。这里推荐使用国产&lt;a href="http://www.dnspod.cn"&gt;DNSPOD&lt;/a&gt;。&lt;br /&gt;
1. 在Namecheap里进入域名管理，点击左侧&lt;code&gt;"General"&lt;/code&gt;下的&lt;code&gt;"Domain Name Server Setup"&lt;/code&gt;，选择&lt;code&gt;"Specify Custom DNS Servers ( Your own DNS Servers )"&lt;/code&gt;, 加入&lt;code&gt;f1g1ns1.dnspod.net&lt;/code&gt;和&lt;code&gt;f1g1ns2.dnspod.net&lt;/code&gt;。&lt;br /&gt;
2. 确保&lt;a href="http://www.hawkhost.com"&gt;Hawkhost&lt;/a&gt;的默认域名，找到购买时发的带有ip地址的邮件。记下ip &lt;br /&gt;
3. 去&lt;a href="http://www.dnspod.cn"&gt;DNSPOD&lt;/a&gt;添加域名，保留两条指向&lt;code&gt;f1g1ns1.dnspod.net&lt;/code&gt;和&lt;code&gt;f1g1ns2.dnspod.net&lt;/code&gt;的NS记录（好像也删不掉）。然后再加两个A记录，分别指向@和www，记录值是&lt;a href="http://www.hawkhost.com"&gt;Hawkhost&lt;/a&gt;提供的ip。此间可能会有一阵子异常，毕竟DNS更新需要时间，但一般半天到一天后无论访问&lt;a href="http://www.loz4.com"&gt;http://www.loz4.com&lt;/a&gt;还是&lt;a href="http://loz4.com"&gt;http://loz4.com&lt;/a&gt;都应该顺畅无压力了。等待DNS更新也别闲着，可以直接上WordPress了。&lt;/p&gt;
&lt;h2&gt;WordPress和cPanel&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.hawkhost.com"&gt;Hawkhost&lt;/a&gt;以及大部分主机商都基于傻瓜型的cPanel控制面板，所以图文教程可以参考 &lt;a href="http://hugege.com/2009/03/16/cpanel-wordpress-china/comment-page-1/"&gt;胡戈戈的中文cPanel安装wordpress教程&lt;/a&gt;。&lt;/p&gt;</summary><category term="web"></category></entry><entry><title>[R] cor的use参数</title><link href="/R-cor-use.html" rel="alternate"></link><updated>2014-01-26T20:44:00+01:00</updated><author><name>blessu</name></author><id>tag:,2014-01-26:R-cor-use.html</id><summary type="html">&lt;p&gt;通常用cor计算PCC的时候，如果数据都很全面，那皆大欢喜可以无视这个参数。但如果数据中散落一些NA，那么处理起来就会比较麻烦，甚至影响最终的结果。&lt;/p&gt;
&lt;p&gt;R (R version 3.0.2 (2013-09-25) -- "Frisbee Sailing") 里面的介绍见下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If ‘use’ is ‘&lt;code&gt;"everything"&lt;/code&gt;’, ‘NA’s will propagate conceptually, i.e., a resulting value will be ‘NA’ whenever one of its contributing observations is ‘NA’.&lt;br /&gt;
If ‘use’ is ‘&lt;code&gt;"all.obs"&lt;/code&gt;’, then the presence of missing observations will produce an error.&lt;br /&gt;
If ‘use’ is ‘&lt;code&gt;"complete.obs"&lt;/code&gt;’ then missing values are handled by casewise deletion (and if there are no complete cases, that gives an error).&lt;br /&gt;
‘&lt;code&gt;"na.or.complete"&lt;/code&gt;’ is the same unless there are no complete cases, that gives ‘NA’.&lt;br /&gt;
Finally, if ‘use’ has the value ‘&lt;code&gt;"pairwise.complete.obs"&lt;/code&gt;’ then the correlation or covariance between each pair of variables is computed using all complete pairs of observations on those variables. This can result in covariance or correlation matrices which are not positive semi-definite, as well as ‘NA’ entries if there are no complete pairs for that pair of variables. For ‘cov’ and ‘var’, ‘&lt;code&gt;"pairwise.complete.obs"&lt;/code&gt;’ only works with the ‘&lt;code&gt;"pearson"&lt;/code&gt;’ method.&lt;br /&gt;
Note that (the equivalent of) ‘var(double(0), use = *)’ gives ‘NA’ for ‘&lt;code&gt;use = "everything"&lt;/code&gt;’ and ‘&lt;code&gt;"na.or.complete"&lt;/code&gt;’, and gives an error in the other cases.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;简单说，&lt;br /&gt;
1. &lt;code&gt;"everything"&lt;/code&gt; 作为default，有NA结果就全NA，不报错；&lt;br /&gt;
2. &lt;code&gt;"all.obs"&lt;/code&gt;:，有NA结果就全NA，有NA就报错； &lt;br /&gt;
3. &lt;code&gt;"complete.obs"&lt;/code&gt;，计算时只考虑完整的部分，如果没有则报错；&lt;br /&gt;
4. &lt;code&gt;"na.or.complete"&lt;/code&gt;，计算时只考虑完整的部分，如果没有不报错给NA；&lt;br /&gt;
5. &lt;code&gt;"pairwise.complete.obs"&lt;/code&gt; ，计算时考虑配对间完整的部分，如果没有则报错。&lt;/p&gt;
&lt;p&gt;关于&lt;code&gt;"pairwise.complete.obs"&lt;/code&gt; 和 &lt;code&gt;"complete.obs"&lt;/code&gt; 的区别可以举个例子（改自&lt;a href="http://stackoverflow.com/questions/18892051/complete-obs-of-cor-function"&gt;Stackflow&lt;/a&gt;）：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;mat&lt;/span&gt; 
&lt;span class="n"&gt;V1&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt; &lt;span class="mf"&gt;0.95553437&lt;/span&gt; &lt;span class="mf"&gt;0.4211649&lt;/span&gt; &lt;span class="n"&gt;NA&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt; &lt;span class="mf"&gt;0.06432989&lt;/span&gt; &lt;span class="mf"&gt;0.7404416&lt;/span&gt; &lt;span class="n"&gt;NA&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt; &lt;span class="mf"&gt;0.36454235&lt;/span&gt; &lt;span class="mf"&gt;0.1724477&lt;/span&gt; &lt;span class="mf"&gt;0.2983889&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt; &lt;span class="mf"&gt;0.14480942&lt;/span&gt; &lt;span class="mf"&gt;0.6861022&lt;/span&gt; &lt;span class="mf"&gt;0.7692226&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt; &lt;span class="mf"&gt;0.88729339&lt;/span&gt; &lt;span class="mf"&gt;0.7440398&lt;/span&gt; &lt;span class="mf"&gt;0.5458178&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;cor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;complete.obs&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;V1&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;
&lt;span class="n"&gt;V1&lt;/span&gt; &lt;span class="mf"&gt;1.0000000&lt;/span&gt; &lt;span class="mf"&gt;0.3179911&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.2597317&lt;/span&gt;
&lt;span class="n"&gt;V2&lt;/span&gt; &lt;span class="mf"&gt;0.3179911&lt;/span&gt; &lt;span class="mf"&gt;1.0000000&lt;/span&gt; &lt;span class="mf"&gt;0.8329635&lt;/span&gt;
&lt;span class="n"&gt;V3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.2597317&lt;/span&gt; &lt;span class="mf"&gt;0.8329635&lt;/span&gt; &lt;span class="mf"&gt;1.0000000&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;cor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pairwise.complete.obs&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;V1&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;
&lt;span class="n"&gt;V1&lt;/span&gt; &lt;span class="mf"&gt;1.0000000&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.1523021&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.2597317&lt;/span&gt;
&lt;span class="n"&gt;V2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.1523021&lt;/span&gt; &lt;span class="mf"&gt;1.0000000&lt;/span&gt; &lt;span class="mf"&gt;0.8329635&lt;/span&gt;
&lt;span class="n"&gt;V3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.2597317&lt;/span&gt; &lt;span class="mf"&gt;0.8329635&lt;/span&gt; &lt;span class="mf"&gt;1.0000000&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;cor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,],&lt;/span&gt;&lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;complete.obs&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;V1&lt;/span&gt; &lt;span class="n"&gt;V2&lt;/span&gt; &lt;span class="n"&gt;V3&lt;/span&gt;
&lt;span class="n"&gt;V1&lt;/span&gt; &lt;span class="mf"&gt;1.0000000&lt;/span&gt; &lt;span class="mf"&gt;0.3179911&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.2597317&lt;/span&gt;
&lt;span class="n"&gt;V2&lt;/span&gt; &lt;span class="mf"&gt;0.3179911&lt;/span&gt; &lt;span class="mf"&gt;1.0000000&lt;/span&gt; &lt;span class="mf"&gt;0.8329635&lt;/span&gt;
&lt;span class="n"&gt;V3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.2597317&lt;/span&gt; &lt;span class="mf"&gt;0.8329635&lt;/span&gt; &lt;span class="mf"&gt;1.0000000&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;尽管前两列都是满值，&lt;code&gt;"complete.obs"&lt;/code&gt;时由于第三列有两个NA，计算前两列的相关系数的时候也受到影响。所以实践上如果要充分利用有的信息，还是尽量使用&lt;code&gt;"pairwise.complete.obs"&lt;/code&gt;。&lt;/p&gt;</summary><category term="R"></category></entry></feed>